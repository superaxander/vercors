name: 'Run ScalaTest'
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - dev-prerelease
  pull_request:
    branches:
      - '**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  Compile:
    if: (github.event_name != 'pull_request' || github.event.pull_request.head.repo.fork)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout VerCors
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache dependencies and compilation
        uses: actions/cache@v4
        with:
          path: out
          key: vercors-ci-ubuntu-${{ hashFiles('build.sc') }}-${{ hashFiles('src') }}
          restore-keys: |
            vercors-ci-ubuntu-${{ hashFiles('build.sc') }}
            vercors-ci-ubuntu
      - name: Enable VCLLVM compilation
        run: touch .include-vcllvm
      - name: Compile
        run: ./mill -j 0 vercors.allTests.assembly + vercors.vcllvm.compile
      - name: Upload VerCors
        uses: actions/upload-artifact@v4
        with:
          name: allTests
          path: out/vercors/allTests/assembly.dest/out.jar
      - name: Upload VCLLVM
        uses: actions/upload-artifact@v4
        with:
          name: vcllvm
          path: out/vercors/vcllvm/compile.dest/vcllvm
      - name: Delete Uncached Files
        run: |
          find out -type f -name upstreamAssembly.json -print -exec rm -rf {} +
          find out -type d -name upstreamAssembly.dest -print -exec rm -rf {} +
          find out -type f -name assembly.json -print -exec rm -rf {} +
          find out -type d -name assembly.dest -print -exec rm -rf {} +
          find out -type d -name "mill-worker-*" -print -exec rm -rf {} +
          rm -rf out/mill
          rm -rf out/mill-build/mill
          rm -rf out/mill-launcher

  ScalaTestWindowsBasic:
    needs: "Compile"
    runs-on: windows-latest
    steps:
      - name: Checkout VerCors
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Cache LLVM and Clang
        id: cache-llvm
        uses: actions/cache@v2
        with:
          path: ${{ runner.temp }}/llvm
          key: llvm-10.0
      - name: Install LLVM and Clang
        uses: KyleMayes/install-llvm-action@v1
        with:
          version: "10.0"
          directory: ${{ runner.temp }}/llvm
          cached: ${{ steps.cache-llvm.outputs.cache-hit }}
      - name: Download VerCors
        uses: actions/download-artifact@v4
        with:
          name: allTests
          path: '.'
      - name: ls
        run: ls
      - name: Run scalatest
        run: java -Xss64m -cp "out.jar;res/universal/deps;res/universal/res" org.scalatest.tools.Runner -o -u report -s vct.test.integration.examples.BasicExamplesSpec
      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-windows-latest
          path: 'report/**/TEST-*.xml'

  ScalaTestMacOsBasic:
    needs: "Compile"
    runs-on: macos-latest
    steps:
      - name: Checkout VerCors
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Install clang
        run: brew install llvm
      - name: Download VerCors
        uses: actions/download-artifact@v4
        with:
          name: allTests
          path: '.'
      - name: ls
        run: ls
      - name: Run scalatest
        run: java -Xss64m -cp out.jar:res/universal/deps:res/universal/res org.scalatest.tools.Runner -o -u report -s vct.test.integration.examples.BasicExamplesSpec
      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-macos-latest
          path: 'report/**/TEST-*.xml'

  ScalaTest:
    needs: "Compile"
    strategy:
      fail-fast: false
      matrix:
        batch: ["-n MATRIX[0]", "-n MATRIX[1]", "-n MATRIX[2]", "-n MATRIX[3]", "-n MATRIX[4]", "-n MATRIX[5]", "-n MATRIX[6]", "-n MATRIX[7]", "-l MATRIX"]

    runs-on: ubuntu-latest
    steps:
      - name: Checkout VerCors
        uses: actions/checkout@v4
      - name: Install Java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: Download VerCors
        uses: actions/download-artifact@v4
        with:
          name: allTests
          path: '.'
      - name: Download VCLLVM
        uses: actions/download-artifact@v4
        with:
          name: vcllvm
          path: '.'
      - name: Make VCLLVM executable
        run: chmod +x vcllvm
      - name: ls
        run: ls -lasFhR
      - name: Run scalatest
        run: java -Xss64m -Xmx2G -cp out.jar:res/universal/deps:res/universal/res:. org.scalatest.tools.Runner -R out.jar -o -u report -w vct ${{matrix.batch}}
      - name: Upload test reports
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: test-report-ubuntu-latest-${{ matrix.batch }}
          path: 'report/**/TEST-*.xml'

